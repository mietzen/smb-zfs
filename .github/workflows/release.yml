name: Build & Upload Packages

on:
  release:
    types: [published]

jobs:
  Pypi:
    runs-on: ubuntu-24.04
    permissions:
        id-token: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build --wheel
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
  Debian:
    runs-on: ubuntu-24.04
    container: debian:12
    permissions:
        id-token: write
    steps:
    - name: Install GIT & GH-CLI
      run: |
        apt-get update
        apt-get install jq git -y
        (type -p wget >/dev/null || (apt-get update && apt-get install wget -y)) \
          && mkdir -p -m 755 /etc/apt/keyrings \
          && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
          && cat $out | tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && mkdir -p -m 755 /etc/apt/sources.list.d \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && apt-get update \
          && apt-get install gh -y
    - uses: actions/checkout@v4
      with:
        path: src
    - name: Install dependencies
      working-directory: src
      run: |
        apt-get build-dep . -y
    - name: Update Changelog
      working-directory: src
      env:
        GIT_TAG: ${{ github.event.release.tag_name }}
        GH_TOKEN: ${{ github.token }}
      run: |
        ADDRESS="${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
        NAME="$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
        export EMAIL="${NAME} <${ADDRESS}>"
        gbp dch --new-version="${GIT_TAG}-1" --release --debian-tag="${GIT_TAG}" --spawn-editor=/bin/true --ignore-branch
    - name: Create Package
      working-directory: src
      run: |
        dpkg-buildpackage -us -uc
    - name: Upload binary to release
      working-directory: src
      env:
        GH_TOKEN: ${{ github.token }}
        GIT_TAG: ${{ github.event.release.tag_name }}
      run: |
        gh release upload "${GIT_TAG}" "../python3-smb-zfs_${GIT_TAG}-1_all.deb" --clobber
